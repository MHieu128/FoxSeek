#!/usr/bin/env node

/**
 * ZAI SDK Setup Script
 * This script helps you set up ZAI SDK configuration for FOXSEEK
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log('ü¶ä FOXSEEK - ZAI SDK Setup');
console.log('================================\n');

const questions = [
  {
    name: 'apiKey',
    question: 'Enter your ZAI API Key: ',
    required: true,
    hint: 'Get your API key from https://z.ai'
  },
  {
    name: 'endpoint',
    question: 'Enter ZAI Endpoint (default: https://api.z.ai/v1): ',
    required: false,
    default: 'https://api.z.ai/v1'
  },
  {
    name: 'projectId',
    question: 'Enter your ZAI Project ID: ',
    required: true,
    hint: 'Get your Project ID from ZAI platform'
  },
  {
    name: 'timeout',
    question: 'Enter timeout in milliseconds (default: 30000): ',
    required: false,
    default: '30000'
  },
  {
    name: 'maxRetries',
    question: 'Enter max retries (default: 3): ',
    required: false,
    default: '3'
  }
];

const answers = {};

function askQuestion(index) {
  if (index >= questions.length) {
    saveConfig();
    return;
  }

  const q = questions[index];
  const questionText = q.hint ? `${q.question}(${q.hint}) ` : q.question;
  
  rl.question(questionText, (answer) => {
    if (!answer.trim() && q.required) {
      console.log(`‚ùå ${q.name} is required!`);
      askQuestion(index);
      return;
    }
    
    answers[q.name] = answer.trim() || q.default || '';
    askQuestion(index + 1);
  });
}

function saveConfig() {
  const envContent = `# ZAI SDK Configuration - Generated by FOXSEEK Setup
# Generated on: ${new Date().toISOString()}

# ZAI API Configuration (REQUIRED)
ZAI_API_KEY=${answers.apiKey}
ZAI_ENDPOINT=${answers.endpoint}
ZAI_PROJECT_ID=${answers.projectId}

# Optional Configuration
ZAI_TIMEOUT=${answers.timeout}
ZAI_MAX_RETRIES=${answers.maxRetries}

# Application Configuration
NEXT_PUBLIC_APP_NAME=FOXSEEK
NEXT_PUBLIC_APP_VERSION=0.1.0

# Development Configuration
NODE_ENV=development
`;

  const envPath = path.join(process.cwd(), '.env.local');
  
  try {
    fs.writeFileSync(envPath, envContent);
    console.log('\n‚úÖ Configuration saved successfully!');
    console.log(`üìÅ File created: ${envPath}`);
    console.log('\nüöÄ You can now run the application with:');
    console.log('   npm run dev');
    console.log('\nüìù Make sure to keep .env.local file secure and do not commit it to git.');
  } catch (error) {
    console.error('\n‚ùå Error saving configuration:', error.message);
  }
  
  rl.close();
}

// Check if .env.local already exists
const envPath = path.join(process.cwd(), '.env.local');
if (fs.existsSync(envPath)) {
  rl.question('‚ö†Ô∏è  .env.local already exists. Do you want to overwrite it? (y/N): ', (answer) => {
    if (answer.toLowerCase() === 'y' || answer.toLowerCase() === 'yes') {
      askQuestion(0);
    } else {
      console.log('‚ùå Setup cancelled.');
      rl.close();
    }
  });
} else {
  askQuestion(0);
}